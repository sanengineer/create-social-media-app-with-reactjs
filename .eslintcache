[{"/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/index.js":"1","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/serviceWorker.js":"2","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/App.js":"3","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/utils/setAuthToken.js":"4","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/store/store.js":"5","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/actions/authAction.js":"6","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/private-route/PrivateRoute.js":"7","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/post/DetailPost.js":"8","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/post/LatestPost.js":"9","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/auth/Register.js":"10","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/navbar.js":"11","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/auth/Dashboard.js":"12","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/auth/Login.js":"13","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/pages/landing.js":"14","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/actions/actionTypes.js":"15","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/actions/postAction.js":"16","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/post/Posts.js":"17","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/suggested-accounts.js":"18","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/post/AddPost.js":"19","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/sidebar-footer.js":"20","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/actions/suggestedUsersAction.js":"21","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/actions/publicUsers.js":"22","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/public-feeds.js":"23","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/services/users-service.js":"24","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/reducers/index.js":"25","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/services/http-service.js":"26","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/reducers/publicUsers.js":"27","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/reducers/footerReducer.js":"28","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/reducers/postReducer.js":"29","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/reducers/suggestedUsers.js":"30","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/reducers/errorReducer.js":"31","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/reducers/authReducer.js":"32","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/cornerComponent.js":"33","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/homePage/homePage.js":"34","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/actions/commentAction.js":"35","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/post/Comments.js":"36"},{"size":433,"mtime":1611039594443,"results":"37","hashOfConfig":"38"},{"size":4951,"mtime":1610706963498,"results":"39","hashOfConfig":"38"},{"size":2178,"mtime":1611042490508,"results":"40","hashOfConfig":"38"},{"size":261,"mtime":1611038576113,"results":"41","hashOfConfig":"38"},{"size":625,"mtime":1611038576112,"results":"42","hashOfConfig":"38"},{"size":3413,"mtime":1611038576075,"results":"43","hashOfConfig":"38"},{"size":639,"mtime":1610706963490,"results":"44","hashOfConfig":"38"},{"size":8280,"mtime":1611038576096,"results":"45","hashOfConfig":"38"},{"size":3123,"mtime":1611042490510,"results":"46","hashOfConfig":"38"},{"size":6381,"mtime":1611038576085,"results":"47","hashOfConfig":"38"},{"size":11762,"mtime":1611038576093,"results":"48","hashOfConfig":"38"},{"size":440,"mtime":1611038576082,"results":"49","hashOfConfig":"38"},{"size":4035,"mtime":1611038576083,"results":"50","hashOfConfig":"38"},{"size":3041,"mtime":1611038576103,"results":"51","hashOfConfig":"38"},{"size":674,"mtime":1611038576073,"results":"52","hashOfConfig":"38"},{"size":1026,"mtime":1611038576077,"results":"53","hashOfConfig":"38"},{"size":2644,"mtime":1611038576097,"results":"54","hashOfConfig":"38"},{"size":1651,"mtime":1611038576101,"results":"55","hashOfConfig":"38"},{"size":3277,"mtime":1611038576094,"results":"56","hashOfConfig":"38"},{"size":823,"mtime":1611038576099,"results":"57","hashOfConfig":"38"},{"size":1106,"mtime":1611038576079,"results":"58","hashOfConfig":"38"},{"size":696,"mtime":1611038576078,"results":"59","hashOfConfig":"38"},{"size":2014,"mtime":1611038576098,"results":"60","hashOfConfig":"38"},{"size":331,"mtime":1611042490511,"results":"61","hashOfConfig":"38"},{"size":501,"mtime":1611038576105,"results":"62","hashOfConfig":"38"},{"size":249,"mtime":1611038576109,"results":"63","hashOfConfig":"38"},{"size":780,"mtime":1611038576107,"results":"64","hashOfConfig":"38"},{"size":441,"mtime":1611038576104,"results":"65","hashOfConfig":"38"},{"size":399,"mtime":1611038576105,"results":"66","hashOfConfig":"38"},{"size":807,"mtime":1611038576108,"results":"67","hashOfConfig":"38"},{"size":274,"mtime":1610968747602,"results":"68","hashOfConfig":"38"},{"size":658,"mtime":1611038576103,"results":"69","hashOfConfig":"38"},{"size":1642,"mtime":1611042490509,"results":"70","hashOfConfig":"38"},{"size":2578,"mtime":1611038576089,"results":"71","hashOfConfig":"38"},{"size":756,"mtime":1611038576076,"results":"72","hashOfConfig":"38"},{"size":1093,"mtime":1611038576095,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},"jsi8zg",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"77"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"77"},{"filePath":"94","messages":"95","errorCount":3,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"77"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"77"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"77"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"77"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"77"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"77"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"77"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"77"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"77"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"77"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"77"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"77"},"/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/index.js",["164"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n",["165","166"],"/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/serviceWorker.js",[],"/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/App.js",[],"/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/utils/setAuthToken.js",[],"/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/store/store.js",[],"/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/actions/authAction.js",["167","168"],"import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport * as actionTypes from \"./actionTypes\";\nrequire(\"dotenv\").config();\n\n// var url = \"http://localhost:3030/api/v1\" || `mongodb+srv://${process.env.MONGODB_ATLAS_USERNAME}:${process.env.MONGODB_ATLAS_PASSWORD}@cluster0-rmxc3.mongodb.net/test?retryWrites=true&w=majority`\n\n// // Register User\n// export const registerUser =  (userData, history) => dispatch => {\n//     axios.post(`${url}/register`, userData)\n//         .then(res => history.push(\"/login\"))\n//         .catch(err => \n//             dispatch({\n//                 type: actionTypes.GET_ERRORS,\n//                 payload: err.response.data\n//             }))\n// }\n\n// // Login - get user token\n// export const loginUser = userData => dispatch => {\n//     axios.post(`${url}/login`, userData)\n//         .then(res => {\n//             console.log('ini adalah response', res.data);\n//             const token = res.data.accessToken;\n//             // const { user } = res.data;\n//             console.log(token);\n//             // console.log({user});\n//             //set token to localstorage\n//             localStorage.setItem(\"jwtToken\", token)\n//             //set token to Auth header\n//             setAuthToken(token);\n//             const decoded =jwt_decode(token);\n//             //set current user\n//             console.log('ini data decode', decoded)\n//             dispatch(setCurrentUser(decoded))\n//         })\n//         .catch(err => \n//             dispatch({\n//                 type: actionTypes.GET_ERRORS,\n//                 payload: err\n//             }))\n// }\n// var url =\n//   \"http://localhost:5000\" ||\n//   `mongodb+srv://${process.env.MONGODB_ATLAS_USERNAME}:${process.env.MONGODB_ATLAS_PASSWORD}@cluster0-rmxc3.mongodb.net/test?retryWrites=true&w=majority`;\n\nvar urlHeroku = \"https://sosmetend.herokuapp.com/api/v1\";\n\n// Register User\nexport const registerUser = (userData, history) => (dispatch) => {\n  axios\n    .post(`${urlHeroku}/register`, userData)\n    .then((res) => history.push(\"/login\"))\n    .catch((err) =>\n      dispatch({\n        type: actionTypes.GET_ERRORS,\n        payload: err.response.data,\n      })\n    );\n};\n\n// Login - get user token\nexport const loginUser = (userData) => (dispatch) => {\n  axios\n    .post(`${urlHeroku}/login`, userData)\n    .then((res) => {\n      // const { data } = res;\n      const { user } = res.data;\n\n      console.log(\"data\", res.data.accessToken);\n      // set token to localstorage\n      localStorage.setItem(\"jwtToken\", res.data.accessToken);\n      // set token to Auth header\n      setAuthToken(res.data.accessToken);\n      // const decoded =jwt_decode(user.accessToken);\n      //set current user\n      dispatch(setCurrentUser(res.data));\n    })\n    .catch((err) => {\n      console.log(\"error \", err);\n      dispatch({\n        type: actionTypes.GET_ERRORS,\n        payload: { message: \"authentication has failed\" },\n      });\n    });\n};\n\n//set logged in user\nexport const setCurrentUser = (decoded) => {\n  return {\n    type: actionTypes.SET_CURRENT_USER,\n    payload: decoded,\n  };\n};\n\n//User loading\nexport const setUserLoading = () => {\n  return {\n    type: actionTypes.USER_LOADING,\n  };\n};\n\n//User log out\nexport const logoutUser = () => (dispatch) => {\n  localStorage.removeItem(\"jwtToken\");\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n};\n","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/private-route/PrivateRoute.js",[],"/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/post/DetailPost.js",["169","170","171"],"// import react and component bootstrap\nimport React, { Component} from 'react';\nimport { Container, Row, Col, Image, Popover, OverlayTrigger, Form, Button } from 'react-bootstrap'\n\n// import component and icon\nimport userIcon from '../../assets/images/user_no-pict.jpg';\nimport commentIcon from '../../assets/icons/icon_comment.png';\nimport saveIcon from '../../assets/icons/icon_save.png';\nimport shareIcon from '../../assets/icons/icon_share.png';\nimport loveIcon from '../../assets/icons/icon_love.png';\nimport logoTwitter from '../../assets/icons/logo_twitter.png';\nimport logoFaceBook from '../../assets/icons/logo_facebook.png';\nimport logoLinkIdn from '../../assets/icons/logo_linkedin.png';\nimport logoReddit from '../../assets/icons/logo_reddit.png';\nimport logoTumblr from '../../assets/icons/logo_tumblr.png';\nimport iconCopyLink from '../../assets/icons/icon_copy-link.png';\nimport Comments from './Comments';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { SuggestedAccounts } from \"../../components/suggested-accounts\";\nimport { commenting, getComments } from '../../actions/commentAction';\n\nclass DetailPost extends Component {\n\n  state = {\n    comment : \"\",\n    commentArray : Array()\n  }\n  \n  componentDidMount(){\n    console.log(Object.keys(this.props.post['post']).length)\n    console.log(this.props.post['post'])\n    console.log('ini adalah redux post detail', this.props.post)\n\n    this.getComment();\n\n    console.log(\"ini respon get comment\", this.state.commentArray)\n  }\n\n  onChange = (e) => {\n    this.setState({ comment : e.target.value })\n    console.log(this.state.comment)\n  }\n\n  postComment = () => {\n    // let commentArray = this.state.commentArray\n    console.log('click')\n\n    let commentData = {\n      user_id : this.props.post['post'].user_id,\n      post_id : this.props.post['post'].post_id,\n      content : this.state.comment,\n    }\n\n    commenting(commentData)\n    .then(res => res.data)\n    .then(res2 => {\n      console.log(res2);\n      this.setState({comment: \"\"})\n      // commentArray.push(commentData);\n      this.getComment();\n    })\n    .catch(err => console.log(err))\n    console.log(commentData)\n\n    // this.setState({ commentArray: commentArray })\n    // console.log(this.state.commentArray)\n  }\n\n  getComment = () => {\n    getComments(this.props.post['post'].post_id)\n    .then(res => res.data.data)\n    .then(res2 => {\n      console.log(res2)\n      this.setState({commentArray: res2})\n    })\n    .catch(err => console.log(err))\n  }\n\n  render() {\n    if(Object.keys(this.props.post['post']).length == 0){\n      // this.props.history.push('/latest-post');\n      return(\n        <div className=\"container containerBox\">\n          <p>detail error</p>\n        </div>\n      )\n    }\n    return (\n      <>\n        <Container className=\"containerBox\">\n          <Row>\n            <Col sm={8}>\n              <br></br>\n              <Row>\n                <Col sm={1}><Image width=\"50px\" height=\"50px\" src={userIcon} rounded /></Col>\n                <Col sm={11}>\n\n                  <div className=\"d-flex\">\n                      <div>\n                        <p className=\"mb-0 mr-auto\">{this.props.post['post'].user.username}</p>\n                        <p>{this.props.post['post'].firstname} {this.props.post['post'].lastname}</p>\n                      </div>\n                  </div>\n\n                  <div>\n                      <p>{this.props.post['post'].content}</p>\n                  </div>\n\n                  <div className=\"d-flex\">\n                    <div>\n                      <p className=\"text-muted\">{this.props.post['post'].createdAt.split(\"T\")[0] } { this.props.post['post'].createdAt.split(\"T\")[1].substring(0, 5) }</p>\n                    </div>\n                    <div className=\"ml-auto\">\n                      <p className=\"mb-0 text-muted\">4 Comment - 54 Loved</p>\n                    </div>\n                  </div>\n\n                  <div className=\"d-flex\">\n                    <div>\n                      <Image src={commentIcon}/>\n                    </div>\n                    <div className=\"ml-5\">\n                      <Image src={saveIcon}/>\n                    </div>\n                    <div className=\"ml-5\">\n                      <OverlayTrigger\n                      trigger=\"click\"\n                      placement=\"bottom\"\n                      overlay=\n                          {\n                              <Popover id={`popover-positioned-bottom`}>\n                              <Popover.Title as=\"h3\">Share To</Popover.Title>\n                              <Popover.Content>\n                                <div className=\"d-flex\">\n                                  <div>\n                                    <Image src={logoTwitter} />\n                                  </div>\n                                  <div>\n                                    <Image className=\"pl-3\" src={logoTumblr} />\n                                  </div>\n                                  <div>\n                                    <Image className=\"pl-3\" src={logoLinkIdn} />\n                                  </div>\n                                  <div>\n                                    <Image className=\"pl-3\" src={logoFaceBook} />\n                                  </div>\n                                  <div>\n                                    <Image className=\"pl-3\" src={logoReddit} />\n                                  </div>\n                                  <div>\n                                    <Image className=\"pl-3\" src={iconCopyLink} />\n                                  </div>\n                                </div>\n                              </Popover.Content>\n                              </Popover>\n                          }\n                      >\n                          <a href=\"#\"><Image src={shareIcon}/></a>\n                      </OverlayTrigger>\n                    </div>\n                    <div className=\"ml-5\">\n                      <Image src={loveIcon}/>\n                    </div>\n                  </div>\n                  <hr></hr>\n                  <h5>Comments</h5>\n\n                  <div className=\"d-flex mt-3\">\n                    <div>\n                      <Image width=\"30px\" height=\"30px\" src={userIcon} rounded />\n                    </div>\n                    <div className=\"bio-desc ml-1 box-comment w-100\">\n                      <h6 className=\"mb-1\">wahyu</h6>\n                      <div>\n                        <Form.Control className=\"font-comment\" value={this.state.comment} onChange={(e) => this.onChange(e)} as=\"textarea\" rows={3} placeholder=\"What happen today dear ?\" />\n                        <div className=\"d-flex\">\n                          <Button onClick={ this.postComment } className=\"ml-auto\" variant=\"primary\" size=\"sm\">Comment</Button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <Comments commentArray={this.state.commentArray} />\n\n                </Col>\n              </Row>\n            </Col>\n            <Col sm={4}>\n              <div className=\"d-flex\">\n                  <div>\n                    <Image width=\"70px\" height=\"70px\" src={userIcon} rounded />\n                  </div>\n                  <div className=\"my-auto ml-3\">\n                    <p className=\"mb-0 font-weight-bold\">Username</p>\n                    <p className=\"mb-0\">name</p>\n                  </div>\n              </div>\n              <div>\n                  <p>{this.props.post['post'].user.bio }</p>\n              </div>\n              <hr></hr>\n              <div>\n                <div className=\"my-3\">\n                    <h6>Sugested Acccount</h6>\n                </div>\n                <SuggestedAccounts\n                    suggestedusers={this.props.suggestedusers}\n                ></SuggestedAccounts>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    )\n  }\n}\n\nDetailPost.propTypes = {\n  post: PropTypes.object.isRequired,\n  suggestedusers: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  post : state.post,\n  suggestedusers: state.suggestedusers.suggestedusers\n});\n\nexport default connect(mapStateToProps)(DetailPost);","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/post/LatestPost.js",["172","173","174","175","176"],"// import react and component bootstrap\nimport React, { Component} from 'react';\nimport { Container, Row, Col, Button, Image, Nav } from 'react-bootstrap'\nimport {latePostUser} from './../../actions/postAction';\nimport { connect } from 'react-redux';\n\nimport Posts from './Posts';\nimport AddPost from './AddPost';\nimport DetailPost from './DetailPost';\nimport userIcon from '../../assets/images/user_no-pict.jpg';\nimport PropTypes from 'prop-types';\n\nclass LatestPost extends Component {\n  state = {\n    show : false,\n    postArray: Array()\n  }\n\n  // showing modal\n  handleShow = () => {\n    // console.log(this.state.postArray);\n    this.setState({ show : true})\n  };\n\n  // closing modal\n  handleClose = () => {\n    this.setState({ show : false});\n    // console.log(this.state.postArray);\n  };\n\n  openDetail = () => {\n    console.log(\"open detail\");\n    // this.props.history.push('/detail-post')\n    return(\n      <DetailPost/>\n    )\n  }\n\n  componentDidMount(){\n    latePostUser(this.props.auth.user.user_id)\n    .then(res => res.data.data)\n    .then(data => {\n      this.setState({ postArray: data})\n      console.log(\"comDidMount on latest\", this.state.postArray)\n    });\n    \n  }\n\n  render() {\n    return (\n      <>\n        <Container className=\"containerBox\">\n          <Row>\n            <Col sm={8}>\n              <Row>\n                <Col sm={10}>\n                  <h3>Latest Post</h3>\n                </Col>\n                <Col sm={2} className=\"p-0\">\n                  <Button onClick={this.handleShow} variant=\"outline-dark\" size=\"sm\" block>Post</Button>\n                  {/* <button onClick={this.handleShow}  className=\"follow-btn btn block\" block>Post</button> */}\n                </Col>\n              </Row>\n              <br></br>\n              <Posts postArray={this.state.postArray} />\n            </Col>\n            <Col sm={4}>\n              <div className=\"d-flex\">\n                  <div>\n                    <Image width=\"70px\" height=\"70px\" src={userIcon} rounded />\n                  </div>\n                  <div className=\"my-auto ml-3\">\n                    <p className=\"mb-0 font-weight-bold\">Username</p>\n                    <p className=\"mb-0\">name</p>\n                  </div>\n              </div>\n              <div>\n                  <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s.</p>\n              </div>\n              <hr></hr>\n              <Nav defaultActiveKey=\"#\" className=\"flex-column\">\n                <Nav.Link href=\"#\">Login Profile</Nav.Link>\n                <Nav.Link eventKey=\"link-1\">Latest Post</Nav.Link>\n                <Nav.Link eventKey=\"link-2\">Log Activity</Nav.Link>\n              </Nav>\n            </Col>\n          </Row>\n        </Container>\n        <AddPost show={this.state.show} handleClose={this.handleClose} />\n      </>\n    )\n  }\n}\n\nLatestPost.propTypes = {\n  auth : PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  auth : state.auth\n});\n\n// export default LatestPost;\nexport default connect(mapStateToProps)(LatestPost);","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/auth/Register.js",["177"],"import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authAction\";\nimport classnames from \"classnames\";\nimport Navbar from \"../navbar\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {},\n      errorPassword: \"\",\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // if(nextProps.auth.isAuthenticated){\n    //     // to push user into dashboard screen after login\n    //     this.props.history.push(\"/dashboard\")\n    // }\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n    if (this.state.password !== this.state.password2) {\n      this.setState({ errorPassword: \" unmatched\" });\n    }\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const newUser = {\n      username: this.state.username,\n      email: this.state.email,\n      password: this.state.password,\n    };\n\n    console.log(newUser);\n    this.props.registerUser(newUser, this.props.history);\n  };\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    const { errors } = this.state;\n    console.log(\"states\", this.state);\n    return (\n      <div className=\"register-page\">\n        <div className=\"container\">\n          <div\n            className=\"row justify-content-center\"\n            style={{ marginTop: \"16vh\" }}\n          >\n            <div className=\"col-8 col-lg-8 col-md-6 col-sm-4\">\n              <div className=\"text-center\">\n                <h4>\n                  <b>Register</b> below\n                </h4>\n              </div>\n              <div className=\"row justify-content-center\">\n                <form\n                  noValidate\n                  onSubmit={this.onSubmit}\n                  className=\"justify-content-center col-5 col-lg-5 col-md-4 col-sm-4 mt-5 mb-5\"\n                >\n                  <div className=\"mb-3\">\n                    <label class=\"form-label\">Username</label>\n                    <input\n                      onChange={this.onChange}\n                      value={this.state.username}\n                      error={errors.username}\n                      id=\"username\"\n                      type=\"text\"\n                      className={classnames(\"auth-form-control form-control\", {\n                        invalid: errors.username,\n                      })}\n                    />\n                    <span className=\"red-text\">{errors.username}</span>\n                  </div>\n                  <div className=\"mb-3\">\n                    <label for=\"email\" class=\"form-label\">\n                      Email\n                    </label>\n                    <input\n                      onChange={this.onChange}\n                      value={this.state.email}\n                      error={errors.email}\n                      id=\"email\"\n                      type=\"text\"\n                      className={classnames(\"auth-form-control form-control\", {\n                        invalid: errors.email,\n                      })}\n                    />\n                    <span className=\"red-text\">{errors.email}</span>\n                  </div>\n                  <div className=\"mb-3\">\n                    <label for=\"password\" class=\"form-label\">\n                      Password\n                    </label>\n                    <input\n                      onChange={this.onChange}\n                      value={this.state.password}\n                      error={errors.password}\n                      id=\"password\"\n                      type=\"password\"\n                      className={classnames(\"auth-form-control form-control\", {\n                        invalid: errors.password,\n                      })}\n                    />\n                    <span className=\"red-text\">{errors.password}</span>\n                  </div>\n                  <div className=\"mb-3\">\n                    <label for=\"password2\" class=\"form-label\">\n                      Password\n                    </label>\n                    <input\n                      onChange={this.onChange}\n                      value={this.state.password2}\n                      error={errors.password}\n                      id=\"password2\"\n                      type=\"password\"\n                      className={classnames(\"auth-form-control form-control\", {\n                        invalid: errors.password,\n                      })}\n                    />\n                    {this.state.password2 &&\n                    this.state.password !== this.state.password2 ? (\n                      <p\n                        style={{\n                          color: \"red\",\n                          fontSize: \"11px\",\n                          paddingTop: \"8px\",\n                          paddingBottom: \"8px\",\n                        }}\n                      >\n                        {this.state.errorPassword}\n                      </p>\n                    ) : (\n                      <p></p>\n                    )}\n                    <span className=\"red-text\">{errors.password}</span>\n                  </div>\n                  <div className=\"text-center mt-5\">\n                    <button type=\"submit\" className=\"btn btn-purple\">\n                      Sign Up\n                    </button>\n                  </div>\n                </form>\n              </div>\n              <div className=\"text-center my-3\">\n                <span>\n                  Have an account? Let's <Link to=\"/login\">Login!</Link>\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth, //recieve state from authreducer\n  errors: state.errors, // recieve state from errorreducer\n});\n\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\n","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/navbar.js",[],"/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/auth/Dashboard.js",[],"/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/auth/Login.js",[],"/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/pages/landing.js",["178","179","180"],"import React, { Component } from \"react\";\nimport Navbar from \"../components/navbar\";\nimport { Feeds } from \"../components/public-feeds\";\nimport { InfoWeb } from \"../components/sidebar-footer\";\nimport { SuggestedAccounts } from \"../components/suggested-accounts\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchSuggestedUsers } from \"../actions/suggestedUsersAction\";\nimport { fetchPublicUsers } from \"../actions/publicUsers\";\n\nclass Landing extends Component {\n  constructor(props) {\n    super();\n\n    // console.log(\"TEST\" + usersPublic);\n  }\n\n  componentDidMount() {\n    this.props.dispatch(fetchSuggestedUsers());\n    this.props.dispatch(fetchPublicUsers());\n  }\n\n  render() {\n    const { publicusers, suggestedusers, linksInfoWeb, error } = this.props;\n    return (\n      <div className=\"landing-page\">\n        <div className=\"section-main container\">\n          <div className=\"row\">\n            <div className=\"feeds-wrapper col-8 pr-5\">\n              <Feeds publicusers={publicusers}></Feeds>\n            </div>\n            <aside className=\"sidebar-wrapper col-4\">\n              <div className=\"sticky-wrapper-aside\">\n                <div className=\"overflow-wrapper-aside\">\n                  <div className=\"sidebar-landing-page-heading h4 pr-5\">\n                    Sign Up or Log In To Follow Poster\n                  </div>\n                  <div className=\"sidebar-suggested-account\">\n                    <div className=\"h6 my-4\">Suggested Account</div>\n                    <div>\n                      <SuggestedAccounts\n                        suggestedusers={suggestedusers}\n                      ></SuggestedAccounts>\n                    </div>\n                    <div className=\"mt-3\">\n                      <a\n                        href=\"/more-suggested-users\"\n                        className=\"more-account-link\"\n                      >\n                        <span className=\"more-account pr-2\">more</span>\n                        <svg\n                          width=\"8\"\n                          height=\"6\"\n                          viewBox=\"0 0 8 6\"\n                          fill=\"none\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                          <path\n                            d=\"M4 6L0.535899 -3.01142e-07L7.4641 -9.06825e-07L4 6Z\"\n                            fill=\"black\"\n                          />\n                        </svg>\n                      </a>\n                    </div>\n                  </div>\n                  <InfoWeb linksInfoWeb={linksInfoWeb}></InfoWeb>\n                </div>\n              </div>\n            </aside>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  publicusers: state.publicusers.publicusers,\n  suggestedusers: state.suggestedusers.suggestedusers,\n  // error: state.suggestedusers.error,\n  loading: state.suggestedusers.loading,\n  linksInfoWeb: state.linksInfoWeb,\n});\n\nexport default connect(mapStateToProps)(Landing);\n","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/actions/actionTypes.js",[],"/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/actions/postAction.js",[],"/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/post/Posts.js",["181"],"// import react and component bootstrap\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport { SET_USER_POST } from '../../actions/actionTypes';\n\nexport const Posts = ({ postArray }) => {\n  let dispatch = useDispatch()\n  console.log(postArray)\n  if(postArray === undefined || postArray.length === 0) {\n    return (\n      <div>\n        <p>Content is Empty</p>\n      </div>\n    )\n  }\n  \n  const openDetail = (postData) => {\n    // console.log(postData)\n    dispatch({\n      type : SET_USER_POST,\n      payload: postData\n    })\n  }\n\n  const test = () => {\n    console.log('tes click')\n  }\n\n\n  const PostRow = (post, index) => {\n    return (\n      <Link onClick={e=> openDetail(post)} id={index} className=\"post-detail-link\" to=\"/detail-post\">\n      {/* <a onClick={openDetail(post)} id={index} className=\"post-detail-link\" to=\"/detail-post\"> */}\n        <div className=\"quotes-people-box-list\">\n          <div className=\"first-text d-flex justify-content-between\">\n            <div className=\"img-bio d-flex justify-content-between\">\n              <div className=\"image-profile-box\">\n                <div className=\"image-profile\">\n                  <img\n                    className=\"img-src rounded-circle\"\n                    src={post.user.avatar}\n                    alt={post.user.username + \" Profil Picture\"}\n                    width=\"56\"\n                  />\n                </div>\n              </div>\n              <div className=\"bio-desc pl-4\">\n                <a href=\"/rachelbowler\">\n                  <div className=\"username\">{post.user.username}</div>\n                </a>\n\n                <div className=\"name\">{post.user.firstname} {post.user.lastname}</div>\n\n                <div className=\"second-text\">\n                  <span>{post.content}</span>\n                  {/* <a onClick={openDetail(post)} >detail</a> */}\n                </div>\n              </div>\n            </div>\n            <div className=\"follow-button-group\">\n              <button className=\"follow-btn btn\" to=\"#\">\n                Follow\n              </button>\n            </div>\n          </div>\n          <div className=\"d-flex\">\n              <p className=\"mb-0 text-muted\">4 Comment</p>\n              <p className=\"mb-0 ml-3 text-muted\">87 Saved</p>\n              <p className=\"mb-0 ml-3 text-muted\">54 Loved</p>\n              <p className=\"mb-0 ml-3 text-muted\">46 Shared</p>\n            </div>\n        </div>\n      </Link>\n    )\n  }\n\n  const PostTable = postArray.map((post, index) => PostRow(post, index))\n\n  return (\n    <>\n      {PostTable}\n    </>\n  )\n}\n\nexport default Posts;","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/suggested-accounts.js",[],"/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/post/AddPost.js",[],"/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/sidebar-footer.js",["182"],"import React from \"react\";\n\nexport const InfoWeb = ({ linksInfoWeb }) => {\n  if (linksInfoWeb.length === 0) return null;\n\n  console.log(\"suggested_account_numbers:\", linksInfoWeb.length);\n\n  const listInfoWeb = (linkInfoWeb) => {\n    return (\n      <li class=\"list-link\">\n        <a\n          class={\"list-link-\" + linkInfoWeb}\n          href={\"/\" + linkInfoWeb}\n          target=\"_blank\"\n        >\n          {linkInfoWeb}\n        </a>\n      </li>\n    );\n  };\n\n  const listsInfoWeb = linksInfoWeb.map((linkInfoWeb) =>\n    listInfoWeb(linkInfoWeb)\n  );\n\n  return (\n    <div class=\"info-web\">\n      <div class=\"about\">\n        <nav class=\"nav-about\">\n          <ul class=\"underlist-link\">{listsInfoWeb}</ul>\n        </nav>\n        <span class=\"copyright\">© 2019 SOSMET FROM FSWWAVETWO</span>\n      </div>\n    </div>\n  );\n};\n","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/actions/suggestedUsersAction.js",["183"],"import * as actionTypes from \"./actionTypes\";\n\nvar url = \"http://localhost:8000/api/v1\";\n\nvar urlHeroku = \"https://sosmetend.herokuapp.com/api/v1\";\n\n//fetch suggested\nexport const fetchSuggestedUsers = () => {\n  return async (dispatch) => {\n    dispatch(fetchSuggestedUsersStart());\n    try {\n      const response = await fetch(`${urlHeroku}/all-profiles`);\n      const res = await handleErrors(response);\n      const json = await res.json();\n      dispatch(fetchSuggestedUsersSuccess(json));\n      return json;\n    } catch (error) {\n      return dispatch(fetchSuggestedUsersFail(error));\n    }\n  };\n};\n\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n}\n\nexport const fetchSuggestedUsersStart = () => ({\n  type: actionTypes.FETCH_SUGGESTED_USERS_START,\n});\n\nexport const fetchSuggestedUsersSuccess = (suggestedusers) => ({\n  type: actionTypes.FETCH_SUGGESTED_USERS_SUCCESS,\n  payload: { suggestedusers },\n});\n\nexport const fetchSuggestedUsersFail = (error) => ({\n  type: actionTypes.FETCH_SUGGESTED_USERS_FAIL,\n  payload: { error },\n});\n","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/actions/publicUsers.js",[],"/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/public-feeds.js",["184"],"import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\n\nexport const Feeds = ({ publicusers }) => {\n  if (publicusers.length === 0) return null;\n  console.log(publicusers.length);\n\n  const Feed = (userPublic) => {\n    return (\n      // <a className=\"post-detail-link\" href={\"/post/\" + userPublic.post_id}>\n      <Link className=\"post-detail-link\" to=\"/latest-post\">\n        <div className=\"quotes-people-box-list\">\n          <div className=\"first-text d-flex justify-content-between\">\n            <div className=\"img-bio d-flex justify-content-between\">\n              <div className=\"image-profile-box\">\n                <div className=\"image-profile\">\n                  <img\n                    className=\"img-src rounded-circle\"\n                    src={userPublic.user.avatar}\n                    alt={\n                      userPublic.user.firstname +\n                      userPublic.user.lastname +\n                      \"Profil Picture\"\n                    }\n                    width=\"56\"\n                    height=\"56\"\n                  />\n                </div>\n              </div>\n              <div className=\"bio-desc pl-4\">\n                <a href={\"/\" + userPublic.user.username}>\n                  <div className=\"username\">{userPublic.user.username}</div>\n                </a>\n\n                <div className=\"name\">\n                  {`${userPublic.user.firstname} ${userPublic.user.lastname}`}\n                </div>\n              </div>\n            </div>\n            <div className=\"follow-button-group\">\n              <button className=\"follow-btn btn\" to=\"#\">\n                Follow\n              </button>\n            </div>\n          </div>\n          <div className=\"second-text\">\n            <span>{userPublic.content}</span>\n          </div>\n        </div>\n      </Link>\n    );\n  };\n\n  const Feedlist = publicusers.map((userPublic) => Feed(userPublic));\n\n  return (\n    <div className=\"TEST\">\n      <div className=\"TEST2\">{Feedlist}</div>\n    </div>\n  );\n};\n","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/services/users-service.js",[],"/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/reducers/index.js",[],"/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/services/http-service.js",[],"/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/reducers/publicUsers.js",[],"/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/reducers/footerReducer.js",["185"],"import { WEB_INFO_FOOTER_SIDEBAR } from \"../actions/actionTypes\";\n\nconst initialState = [\n  \"about\",\n  \"explore\",\n  \"hastag\",\n  \"community-guideline\",\n  \"privacy-policy\",\n  \"terms\",\n  \"careers\",\n  \"developers\",\n  \"newsroom\",\n  \"ads\",\n  \"investors\",\n  \"contact\",\n];\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case WEB_INFO_FOOTER_SIDEBAR:\n      return state;\n    default:\n      return state;\n  }\n}\n","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/reducers/postReducer.js",["186"],"import {\n    SET_USER_POST,\n} from \"../actions/actionTypes\"\n\n// const isEmpty = require('is-empty');\n\nconst initialState ={\n    post: {}\n}\n\nexport default function(state = initialState, action){\n    switch (action.type) {\n        case SET_USER_POST:\n            return{\n                ...state,\n                post: action.payload\n            };\n        default:\n            return state;\n    }\n}\n","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/reducers/suggestedUsers.js",[],"/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/reducers/errorReducer.js",["187"],"import { GET_ERRORS } from '../actions/actionTypes'\n\nconst initialState = {}\n\nexport default function(state= initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload\n        default:\n            return state;\n    }\n    \n}",["188","189"],"/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/reducers/authReducer.js",["190","191"],"import {\n    SET_CURRENT_USER,\n    USER_LOADING,\n    GET_USER\n} from \"../actions/actionTypes\"\n\nconst isEmpty = require('is-empty');\n\nconst initialState ={\n    isAuthenticated: false,\n    user: {},\n    loading: false\n}\n\nexport default function(state = initialState, action){\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return{\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        case USER_LOADING:\n            return {\n                ...state,\n                loading: true\n            }\n        default:\n            return state;\n    }\n}\n","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/cornerComponent.js",[],"/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/homePage/homePage.js",[],"/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/actions/commentAction.js",["192"],"import axios from \"axios\";\nimport * as actionTypes from './actionTypes';\nrequire('dotenv').config()\n\nvar url = \"https://sosmetend.herokuapp.com/api/v1\" || `mongodb+srv://${process.env.MONGODB_ATLAS_USERNAME}:${process.env.MONGODB_ATLAS_PASSWORD}@cluster0-rmxc3.mongodb.net/test?retryWrites=true&w=majority`\n\n// R\nexport const commenting =  (commentData) => {\n    console.log('posting ini')\n    const response = axios.post(`${url}/comment-post`, commentData, {\n        headers: {\n            'Authorization' : localStorage.jwtToken\n        }\n    })\n\n    return response;\n}\n\n//\nexport const getComments = (postId) => {\n    const response = axios.get(`${url}/comments/${postId}`,{\n        'Authorization' : localStorage.jwtToken\n    })\n\n    return response;\n}","/Users/sanmacair/Documents/Courses/Binar/Coding/sosmet-fe/src/components/post/Comments.js",["193"],"// import react and component bootstrap\nimport React from 'react';\nimport {Image} from 'react-bootstrap';\nimport userIcon from '../../assets/images/user_no-pict.jpg';\n\nexport const Comments = ({ commentArray }) => {\n\n  if(commentArray === undefined || commentArray.length === 0) {\n    return null\n  }\n\n  const CommentRow = (post, index) => {\n    return (\n        <div id={index} className=\"d-flex mt-3\">\n          <div>\n            <Image width=\"30px\" height=\"30px\" src={post.user.avatar} rounded />\n          </div>\n          <div className=\"bio-desc ml-1 box-comment w-100\">\n            <h6 className=\"mb-1\">{post.user.username} \n              <span className=\"font-comment\">{post.createdAt.split(\"T\")[0] } { post.createdAt.split(\"T\")[1].substring(0, 5) }</span>\n              </h6>\n            <div className=\"font-comment\">\n              <span>{post.content}</span>\n            </div>\n          </div>\n        </div>\n    )\n  }\n\n  const CommentTable = commentArray.map((post, index) => CommentRow(post, index))\n\n  return (\n    <>\n      {CommentTable}\n    </>\n  )\n}\n\nexport default Comments;",{"ruleId":"194","severity":1,"message":"195","line":4,"column":13,"nodeType":"196","messageId":"197","endLine":4,"endColumn":26},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"194","severity":1,"message":"202","line":3,"column":8,"nodeType":"196","messageId":"197","endLine":3,"endColumn":18},{"ruleId":"194","severity":1,"message":"203","line":69,"column":15,"nodeType":"196","messageId":"197","endLine":69,"endColumn":19},{"ruleId":"204","severity":1,"message":"205","line":27,"column":20,"nodeType":"206","messageId":"207","endLine":27,"endColumn":27},{"ruleId":"208","severity":1,"message":"209","line":81,"column":52,"nodeType":"210","messageId":"211","endLine":81,"endColumn":54},{"ruleId":"212","severity":1,"message":"213","line":159,"column":27,"nodeType":"214","endLine":159,"endColumn":39},{"ruleId":"194","severity":1,"message":"215","line":12,"column":10,"nodeType":"196","messageId":"197","endLine":12,"endColumn":24},{"ruleId":"204","severity":1,"message":"205","line":17,"column":16,"nodeType":"206","messageId":"207","endLine":17,"endColumn":23},{"ruleId":"216","severity":2,"message":"217","line":90,"column":30,"nodeType":"196","messageId":"218","endLine":90,"endColumn":32},{"ruleId":"216","severity":2,"message":"217","line":92,"column":57,"nodeType":"196","messageId":"218","endLine":92,"endColumn":59},{"ruleId":"216","severity":2,"message":"217","line":92,"column":73,"nodeType":"196","messageId":"218","endLine":92,"endColumn":75},{"ruleId":"194","severity":1,"message":"219","line":7,"column":8,"nodeType":"196","messageId":"197","endLine":7,"endColumn":14},{"ruleId":"194","severity":1,"message":"219","line":2,"column":8,"nodeType":"196","messageId":"197","endLine":2,"endColumn":14},{"ruleId":"194","severity":1,"message":"220","line":6,"column":8,"nodeType":"196","messageId":"197","endLine":6,"endColumn":17},{"ruleId":"194","severity":1,"message":"221","line":24,"column":56,"nodeType":"196","messageId":"197","endLine":24,"endColumn":61},{"ruleId":"194","severity":1,"message":"222","line":26,"column":9,"nodeType":"196","messageId":"197","endLine":26,"endColumn":13},{"ruleId":"223","severity":1,"message":"224","line":11,"column":9,"nodeType":"214","endLine":15,"endColumn":10},{"ruleId":"194","severity":1,"message":"225","line":3,"column":5,"nodeType":"196","messageId":"197","endLine":3,"endColumn":8},{"ruleId":"194","severity":1,"message":"226","line":1,"column":17,"nodeType":"196","messageId":"197","endLine":1,"endColumn":26},{"ruleId":"227","severity":1,"message":"228","line":18,"column":1,"nodeType":"229","endLine":25,"endColumn":2},{"ruleId":"227","severity":1,"message":"228","line":11,"column":1,"nodeType":"229","endLine":21,"endColumn":2},{"ruleId":"227","severity":1,"message":"228","line":5,"column":1,"nodeType":"229","endLine":13,"endColumn":2},{"ruleId":"198","replacedBy":"230"},{"ruleId":"200","replacedBy":"231"},{"ruleId":"194","severity":1,"message":"232","line":4,"column":5,"nodeType":"196","messageId":"197","endLine":4,"endColumn":13},{"ruleId":"227","severity":1,"message":"228","line":15,"column":1,"nodeType":"229","endLine":31,"endColumn":2},{"ruleId":"194","severity":1,"message":"233","line":2,"column":13,"nodeType":"196","messageId":"197","endLine":2,"endColumn":24},{"ruleId":"194","severity":1,"message":"234","line":4,"column":8,"nodeType":"196","messageId":"197","endLine":4,"endColumn":16},"no-unused-vars","'serviceWorker' is defined but never used.","Identifier","unusedVar","no-native-reassign",["235"],"no-negated-in-lhs",["236"],"'jwt_decode' is defined but never used.","'user' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","CallExpression","preferLiteral","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'ProfilOverview' is defined but never used.","no-undef","'me' is not defined.","undef","'Navbar' is defined but never used.","'PropTypes' is defined but never used.","'error' is assigned a value but never used.","'test' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'url' is assigned a value but never used.","'Component' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["235"],["236"],"'GET_USER' is defined but never used.","'actionTypes' is defined but never used.","'userIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]